;/*****************************************************
;Chip type           : ATmega8535
;Program type        : Application
;Clock frequency     : 4,000000 MHz
;Memory model        : Small
;External SRAM size  : 0
;Data Stack size     : 128
;*****************************************************/
;
;#include <mega8535.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0011 #endasm
;#include <lcd.h>
;
;// I2C Bus functions
;#asm
;PCODE: $00000010 VOL: 0
   .equ __i2c_port=0x12 ;PORTD
;PCODE: $00000011 VOL: 0
   .equ __sda_bit=2
;PCODE: $00000012 VOL: 0
   .equ __scl_bit=3
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0019 #endasm
;#include <i2c.h>
;
;// Declare your global variables here
;
;unsigned int bacaNilaiSensorI2C(unsigned char alamatI2C) {
; 0000 001E unsigned int bacaNilaiSensorI2C(unsigned char alamatI2C) {

	.CSEG
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001F    unsigned int sensor;
; 0000 0020 
; 0000 0021    i2c_start();
;PCODE: $00000017 VOL: 0
;	alamatI2C -> Y+2
;	sensor -> R16,R17
;PCODE: $00000018 VOL: 0
; 0000 0022    i2c_write(alamatI2C);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0023    i2c_write(0x41);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024    i2c_stop();
;PCODE: $0000001F VOL: 0
; 0000 0025 
; 0000 0026    delay_us(10);
;PCODE: $00000020 VOL: 0
; 0000 0027 
; 0000 0028    i2c_start();
;PCODE: $00000021 VOL: 0
; 0000 0029    i2c_write(alamatI2C|0x01);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002A    sensor = i2c_read(1);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002B    sensor = sensor*256 + i2c_read(0);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002C    i2c_stop();
;PCODE: $00000035 VOL: 0
; 0000 002D    return sensor;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002E }
;PCODE: $0000003A VOL: 0
;
;
;
;void main(void)
; 0000 0033 {
;PCODE: $0000003B VOL: 0
; 0000 0034 // Declare your local variables here
; 0000 0035 unsigned int sensor;
; 0000 0036 
; 0000 0037 // I2C Bus initialization
; 0000 0038 i2c_init();
;	sensor -> R16,R17
;PCODE: $0000003C VOL: 0
; 0000 0039 
; 0000 003A // LCD module initialization
; 0000 003B lcd_init(16);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 003C 
; 0000 003D while (1)
;PCODE: $00000040 VOL: 0
; 0000 003E       {
; 0000 003F       // Place your code here
; 0000 0040       sensor = bacaNilaiSensorI2C(0xE0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0041       lcd_gotoxy(0,0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0042       lcd_putsf("Data = ");
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0043       lcd_putchar(sensor/1000 %10 + 0x30);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0044       lcd_putchar(sensor/100 %10 + 0x30);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0045       lcd_putchar(sensor/10 %10 + 0x30);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0046       lcd_putchar(sensor %10 + 0x30);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0047 
; 0000 0048       delay_ms(500);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0049 
; 0000 004A       };
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 004B }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;
;
;
